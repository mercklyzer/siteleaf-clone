[{"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\index.js":"1","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\App.js":"2","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\reportWebVitals.js":"3","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\Navbar.js":"4","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\Header.js":"5","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\Section.js":"6","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSection.js":"7","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSectionContext.js":"8","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\ContentSection.js":"9","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SectionButton.js":"10","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSubSection.js":"11","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\AnimalCard.js":"12","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSectionText.js":"13"},{"size":543,"mtime":1612118723724,"results":"14","hashOfConfig":"15"},{"size":526,"mtime":1612073224403,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1555,"mtime":1612094735206,"results":"18","hashOfConfig":"15"},{"size":1657,"mtime":1612079399640,"results":"19","hashOfConfig":"15"},{"size":3476,"mtime":1612021937375,"results":"20","hashOfConfig":"15"},{"size":1996,"mtime":1612071601556,"results":"21","hashOfConfig":"15"},{"size":277,"mtime":1612034376048,"results":"22","hashOfConfig":"15"},{"size":1705,"mtime":1612101075338,"results":"23","hashOfConfig":"15"},{"size":830,"mtime":1611991922469,"results":"24","hashOfConfig":"15"},{"size":996,"mtime":1612073425379,"results":"25","hashOfConfig":"15"},{"size":836,"mtime":1612101320720,"results":"26","hashOfConfig":"15"},{"size":1039,"mtime":1612070845543,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"hpjj3w",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\index.js",[],["64","65"],"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\App.js",["66"],"import './App.css';\nimport Navbar from './components/Navbar'\nimport Header from './components/Header'\nimport Section from './components/Section'\nimport SimpleSection from './components/SimpleSection';\nimport {SimpleSectionProvider} from './components/SimpleSectionContext'\nimport ContentSection from './components/ContentSection';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Header />\n      <Section />\n      <SimpleSection/>\n      <ContentSection/>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\reportWebVitals.js",[],"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\Navbar.js",["67"],"import React, { Component } from 'react'\r\nimport './navbar.css'\r\nimport logo from './images/logo.svg'\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    this.clickHandler = this.clickHandler.bind(this)\r\n    }\r\n\r\n    clickHandler(){\r\n        let navbarList = document.getElementById('my-navbar-list')\r\n        if(navbarList.className === 'my-navbar-list'){\r\n            navbarList.className += ' responsive'\r\n        }\r\n        else{\r\n            navbarList.className = 'my-navbar-list'\r\n        }\r\n        console.log(navbarList.className)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"my-navbar\">\r\n                <button className=\"my-brand my-button\"><img src={logo}/></button>\r\n                <button className=\"my-navbar-hamburger my-button\" onClick={this.clickHandler}>Menu</button>\r\n                <div className=\"my-navbar-list\" id=\"my-navbar-list\">\r\n                    <button className=\"my-navbar-list-item my-button\">Blog</button>\r\n                    <button className=\"my-navbar-list-item my-button\">Gallery</button>\r\n                    <button className=\"my-navbar-list-item my-button\">Plans</button>\r\n                    <button className=\"my-navbar-list-item my-button\">Learn</button>\r\n                    <button className=\"my-navbar-list-item my-button\">Log in</button>\r\n                    <button className=\"my-navbar-list-item my-button sign-up\">Sign up</button>\r\n                </div>            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\Header.js",[],"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\Section.js",["68"],"import React, { Component } from 'react'\r\nimport './section.css'\r\nimport collaborate from './images/home__manage--collaborate.jpg'\r\nimport preview from './images/home__manage--preview.jpg'\r\nimport edit from './images/home__manage--edit.jpg'\r\nimport customize from './images/home__manage--customize.jpg'\r\nimport SectionButton from './SectionButton'\r\n\r\n\r\nclass Section extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             displayImage: collaborate,\r\n             images: [collaborate, preview, edit, customize],\r\n             boxes: [\r\n                {\r\n                    title: 'Collaborate',\r\n                    desc: 'Invite your client or team to create and edit content. Set them as Admin, Publisher, or Writer.',\r\n                    isActive: true\r\n                },\r\n                {\r\n                    title: 'Preview before you publish',\r\n                    desc: 'Preview changes before they go live. Then publish with one click whenever youâ€™re ready.',\r\n                    isActive: false\r\n                },\r\n                {\r\n                    title: 'Smart text editor',\r\n                    desc: 'Choose between a visual editor or just plain Markdown. Drag and drop images or even entire text files.',\r\n                    isActive: false\r\n                },\r\n                {\r\n                    title: 'Powerful content',\r\n                    desc: 'Customize your site with document collections, advanced metadata, and custom permalinks.',\r\n                    isActive: false\r\n                }\r\n            ],\r\n            prevBox : 0,\r\n        }\r\n\r\n        this.clickHandler = this.clickHandler.bind(this)\r\n    }\r\n    \r\n    clickHandler(e,key){\r\n        let boxes_temp = [...this.state.boxes]              //copy values of the boxes\r\n        boxes_temp[this.state.prevBox].isActive = false     //update previous box to inactive\r\n        boxes_temp[key].isActive = true                     //update the current box to active\r\n        \r\n        this.setState({\r\n            displayImage: this.state.images[key],\r\n            boxes: boxes_temp,                              //update the boxes in the state\r\n            prevBox: key\r\n        }, () => console.log(this.state.boxes))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='section'>\r\n                <div className='section-title'>Content management for the whole team</div>\r\n\r\n                <div className='section-container'>\r\n                    <div className='section-text-container'>\r\n                        {this.state.boxes.map((box, index) => {\r\n                            return (\r\n                                <SectionButton \r\n                                title={box.title}\r\n                                desc={box.desc}\r\n                                isActive={box.isActive}\r\n                                key={`${index}${box.isActive}`}\r\n                                id={index}\r\n                                clickHandler={this.clickHandler}\r\n                                />\r\n                            )\r\n                        })}  \r\n                    </div>\r\n\r\n                    <div className='section-image' key={this.state.displayImage}>\r\n                        <img src={this.state.displayImage} className='fadeIn'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Section\r\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSection.js",[],"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSectionContext.js",["69"],"import React, { Component } from 'react'\r\n\r\nconst SimpleSectionContext = React.createContext()\r\n\r\nconst SimpleSectionProvider = SimpleSectionContext.Provider\r\nconst SimpleSectionConsumer = SimpleSectionContext.Consumer\r\n\r\nexport {SimpleSectionProvider, SimpleSectionConsumer}\r\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\ContentSection.js",["70"],"import React, { Component } from 'react'\r\nimport AnimalCard from './AnimalCard'\r\nimport free from './images/home__free.svg'\r\n\r\nclass ContentSection extends Component {\r\n    render() {\r\n        const imageStyle = {\r\n            width: '100%',\r\n            height: 'auto'\r\n        }\r\n        const divImageStyle ={\r\n            width: '100%',\r\n            maxWidth: '1000px'\r\n        }\r\n\r\n        const divCardStyle ={\r\n            maxWidth: '1200px',\r\n            textAlign: 'center',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-evenly',\r\n            alignItems: 'flex-start'\r\n        }\r\n\r\n        return (\r\n            <div className={`section`} style={{backgroundColor: '#374252'}}>\r\n                <div className='section-title' style={{color: 'white'}}>Free your content</div>\r\n                <div style={divImageStyle}>\r\n                    <img src={free} style={imageStyle}/>\r\n                </div>\r\n\r\n                <div className='flex' style={divCardStyle}>\r\n                    <AnimalCard title='Publish anywhere' desc='Generate static sites to Amazon S3, GitHub Pages, Rackspace, or FTP using your own domain name.' animal={false} color='white'/>\r\n                    <AnimalCard title='Import and export' desc='Easily move your content into or out of Siteleaf. Import from WordPress, Drupal, Tumblr, Ghost, and more.' animal={false} color='white'/>\r\n                    <AnimalCard title='API for your content' desc='Access your data and integrate into other websites and apps. Automate tasks with Zapier.' animal={false} color='white'/>\r\n                </div>\r\n                \r\n            </div>  \r\n            )\r\n    }\r\n}\r\n\r\nexport default ContentSection\r\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SectionButton.js",[],"D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSubSection.js",["71","72"],"import React, { Component } from 'react'\r\nimport styles from './simpleSection.module.css'\r\nimport SimpleSectionText from './SimpleSectionText'\r\n\r\nclass SimpleSubSection extends Component {\r\n    render() {\r\n        let data = this.props\r\n        console.log(data)\r\n        let display = data.reverse? (\r\n            <>\r\n            <SimpleSectionText />\r\n            <div className={styles.sectionImageContainer}>\r\n                <img src={data.imageSource} className={styles.sectionImage}/>\r\n            </div>\r\n            </>\r\n            )\r\n            :\r\n            (\r\n            <>\r\n            <div className={styles.sectionImageContainer}>\r\n                <img src={data.imageSource} className={styles.sectionImage}/>\r\n            </div>\r\n            <SimpleSectionText />\r\n            </>\r\n            )\r\n\r\n        return (\r\n            <div className={styles.sectionContainer}> \r\n                {display}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SimpleSubSection\r\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\AnimalCard.js",["73"],"import React, { Component } from 'react'\r\n\r\nclass AnimalCard extends Component {\r\n    render() {\r\n        const animal = this.props.animal? \r\n            (<div className=\"animal-card-pic flex\">\r\n            <img src={this.props.image}/>\r\n            </div>)\r\n            : \r\n            ''\r\n\r\n\r\n        const white = this.props.color? {color: 'white'}: {}\r\n        return (\r\n            <div className={`animal-card ${(this.props.animal? '':'content-text')}`}>\r\n                {animal}\r\n                <div className=\"animal-card-description\">\r\n                <span className=\"animal-card-title\" style={white}>{this.props.title}</span>\r\n                <span style={white}>\r\n                    {this.props.desc}\r\n                </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimalCard\r\n","D:\\Web Development\\ReactSiteLeafClone\\site-leaf-clone\\src\\components\\SimpleSectionText.js",["74"],"import React, { Component } from 'react'\r\nimport styles from './simpleSection.module.css'\r\nimport {SimpleSectionConsumer} from './SimpleSectionContext'\r\nimport openSource from './images/logos--open-source.svg'\r\n\r\n\r\n\r\nclass SimpleSectionText extends Component {\r\n    render() {\r\n        return (\r\n        \r\n        <SimpleSectionConsumer>\r\n            {data => {\r\n                console.log(data)\r\n\r\n                let logo = data.logo? <img src={`${openSource}`} className={`${styles.sectionTextLogo}`}/>:''\r\n            \r\n                return (\r\n                <div className={styles.sectionTextContainer}>\r\n                    <div className={styles.sectionTextTitle} style={data.titleColor}>{data.title}</div>\r\n                    <div className={styles.sectionTextDesc}>{data.desc1} <br/><br/> {data.desc2}</div>\r\n                    {logo}\r\n                </div>\r\n                )\r\n                }\r\n            }\r\n        </SimpleSectionConsumer>\r\n        )\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default SimpleSectionText\r\n",["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":6,"column":9,"nodeType":"83","messageId":"84","endLine":6,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":25,"column":56,"nodeType":"87","endLine":25,"endColumn":73},{"ruleId":"85","severity":1,"message":"86","line":80,"column":25,"nodeType":"87","endLine":80,"endColumn":80},{"ruleId":"81","severity":1,"message":"88","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":28,"column":21,"nodeType":"87","endLine":28,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":13,"column":17,"nodeType":"87","endLine":13,"endColumn":78},{"ruleId":"85","severity":1,"message":"86","line":21,"column":17,"nodeType":"87","endLine":21,"endColumn":78},{"ruleId":"85","severity":1,"message":"86","line":7,"column":13,"nodeType":"87","endLine":7,"endColumn":42},{"ruleId":"85","severity":1,"message":"86","line":16,"column":39,"nodeType":"87","endLine":16,"endColumn":107},{"ruleId":"77","replacedBy":"89"},{"ruleId":"79","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'SimpleSectionProvider' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.",["91"],["92"],"no-global-assign","no-unsafe-negation"]